'use strict';

exports.__esModule = true;

var _dataItem = require('../common/data-item');

var _dataItem2 = _interopRequireDefault(_dataItem);

var _performance = require('../../performance/performance');

var _performance2 = _interopRequireDefault(_performance);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var LoadingPhaseItem = function(_DataItem) {
    _inherits(LoadingPhaseItem, _DataItem);

    function LoadingPhaseItem(_ref) {
        var name = _ref.name,
            phaseStartTime = _ref.phaseStartTime;

        _classCallCheck(this, LoadingPhaseItem);

        var _this = _possibleConstructorReturn(this, _DataItem.call(this, {}));

        _this.data.name = name;
        _this.data.duration = Math.floor(_performance2.default.now() - phaseStartTime);
        return _this;
    }

    return LoadingPhaseItem;
}(_dataItem2.default);

exports.default = LoadingPhaseItem;