"use strict";
var __extends = (this && this.__extends) || (function() {
    var extendStatics = Object.setPrototypeOf ||
        ({
                __proto__: []
            }
            instanceof Array && function(d, b) {
                d.__proto__ = b;
            }) ||
        function(d, b) {
            for (var p in b)
                if (b.hasOwnProperty(p)) d[p] = b[p];
        };
    return function(d, b) {
        extendStatics(d, b);

        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", {
    value: true
});
var React = require("react");
var renderRotatedComponents = function(child) {
    return React.createElement('div', {
        key: child.props.id + "-rotated-wrapper",
        id: child.props.id + "-rotated-wrapper",
        'data-mesh-internal': true
    }, child);
};
var renderChildren = function(childrenComponents, meshResults) {
    var rotatedComponentsSet = {};
    meshResults.rotatedComponents.forEach(function(rotatedComponent) {
        return rotatedComponentsSet[rotatedComponent] = true;
    });
    return childrenComponents.map(function(child) {
        return rotatedComponentsSet[child.props.id] ? renderRotatedComponents(child) : child;
    }).concat([
        meshResults.wedges.map(function(wedge) {
            return React.createElement('div', {
                id: wedge,
                key: wedge,
                'data-mesh-internal': true
            });
        })
    ]);
};
var MeshRenderer = /** @class */ (function(_super) {
    __extends(MeshRenderer, _super);

    function MeshRenderer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MeshRenderer.prototype.render = function() {
        var _a = this.props,
            meshResults = _a.meshResults,
            containerId = _a.containerId,
            contentSkinPartId = _a.contentSkinPartId,
            children = _a.children;
        return React.createElement('div', {
            id: "" + containerId + contentSkinPartId + "-gridWrapper",
            key: "" + containerId + contentSkinPartId + "-gridWrapper",
            'data-mesh-internal': true
        }, React.createElement('div', {
            id: "" + containerId + contentSkinPartId + "-gridContainer",
            key: "" + containerId + contentSkinPartId + "-gridContainer",
            'data-mesh-internal': true
        }, renderChildren(children, meshResults)));
    };
    return MeshRenderer;
}(React.Component));
exports.default = MeshRenderer;
//# sourceMappingURL=MeshRenderer.js.map