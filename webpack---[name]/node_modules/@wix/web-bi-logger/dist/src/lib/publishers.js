'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
            }
        }
    }
    return target;
};

exports.imagePublisher = imagePublisher;
exports.beaconPublisher = beaconPublisher;
exports.fetchPublisher = fetchPublisher;
exports.resolvePublisher = resolvePublisher;

var _utils = require('./utils');

var _env = require('./env');

var _transport = require('./transport');

function imagePublisher() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    return function imagePublisher(params) {
        var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        // eslint-disable-line func-names
        var url = (0, _utils.buildUrl)(options, params, context);
        return (0, _transport.pixelTransport)(url, context.image);
    };
}

function beaconPublisher() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    return function beaconPublisher(params) {
        var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        // eslint-disable-line func-names
        var url = (0, _utils.buildUrl)(options, params, context);
        return (0, _transport.beaconTransport)(url).catch(function() {
            return (0, _transport.pixelTransport)(url, context.image);
        });
    };
}

function fetchPublisher() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    return function fetchPublisher(params) {
        var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        // eslint-disable-line func-names
        var url = (0, _utils.buildUrl)(options, params, context);
        return (0, _transport.fetchTransport)(url);
    };
}

function resolvePublisher() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var publisher = void 0;

    if ((0, _env.isWebWorker)()) {
        publisher = fetchPublisher;
    } else if (typeof options.useBeacon === 'undefined' || options.useBeacon) {
        publisher = beaconPublisher;
    } else {
        publisher = imagePublisher;
    }

    publisher = publisher(options);

    /* eslint-disable camelcase */
    return function(params, context) {
        return publisher(_extends({}, params, (0, _utils.getCookieParams)({
            _client_id: {
                name: '_wixCIDX'
            },
            _uuid: {
                name: '_wixUIDX',
                transform: function transform(value) {
                    return typeof value === 'string' && value.split('|')[1];
                }
            }
        })), context);
    };
}