"use strict";
var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    var c = arguments.length,
        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
        d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importDefault = (this && this.__importDefault) || function(mod) {
    return (mod && mod.__esModule) ? mod : {
        "default": mod
    };
};
Object.defineProperty(exports, "__esModule", {
    value: true
});
var playable_1 = require("playable");
var web_bi_logger_1 = __importDefault(require("@wix/web-bi-logger"));
var bi_logger_video_platform_1 = __importDefault(require("@wix/bi-logger-video-platform"));
var DEFAULT_INTERVAL_FOR_PROGRESS = 5000;
var UNKNOW_TYLE = 'unknown_type';
var convertMSToInt = function(time) {
    return Math.round(time * 1000);
};
var PlaybackBIModule = /** @class */ (function() {
    function PlaybackBIModule(_a) {
        var eventEmitter = _a.eventEmitter,
            engine = _a.engine;
        this._customData = JSON.stringify({});
        this._intervalID = null;
        this._intervalDelta = DEFAULT_INTERVAL_FOR_PROGRESS;
        this._isOngoingPlayback = false;
        this._isVideoPlaying = false;
        this._eventEmitter = eventEmitter;
        this._engine = engine;
        this._videoTag = this._engine.getElement();
        this._logger = bi_logger_video_platform_1.default(web_bi_logger_1.default)();
        this._bindCallbacks();
        this._bindEvents();
        this._generateNewViewID();
    }
    PlaybackBIModule.prototype.setWixBIVideoID = function(id) {
        this._videoID = id;
    };
    PlaybackBIModule.prototype.setWixBIProduct = function(product) {
        this._product = product;
    };
    PlaybackBIModule.prototype.setWixBICustomDataJSON = function(customDataJSON) {
        if (customDataJSON === void 0) {
            customDataJSON = {};
        }
        this._customData = JSON.stringify(customDataJSON);
    };
    PlaybackBIModule.prototype.setWixBIProgressInterval = function(delta) {
        this._intervalDelta = delta;
    };
    PlaybackBIModule.prototype.setWixVisitorID = function(visitorID) {
        this._visitorID = visitorID;
        this._logger.util.updateDefaults({
            _visitorId: visitorID,
        });
    };
    PlaybackBIModule.prototype.setWixMSID = function(msID) {
        this._msID = msID;
        this._logger.util.updateDefaults({
            _msid: msID,
        });
    };
    Object.defineProperty(PlaybackBIModule.prototype, "_isAllMandatoryDataSet", {
        get: function() {
            return this._visitorID && this._msID;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PlaybackBIModule.prototype, "_collerationID", {
        get: function() {
            return this._videoID + "_" + this._viewID + "_" + this._randomSalt;
        },
        enumerable: true,
        configurable: true
    });
    PlaybackBIModule.prototype._generateNewViewID = function() {
        this._viewID = Date.now().toString();
        this._randomSalt = Math.floor(Math.random() * 1000);
    };
    PlaybackBIModule.prototype.getPlayedRange = function() {
        var played = this._videoTag.played;
        var playedRanges = [];
        for (var i = 0; i < played.length; i++) {
            playedRanges.push([
                convertMSToInt(played.start(i)),
                convertMSToInt(played.end(i)),
            ]);
        }
        return playedRanges;
    };
    PlaybackBIModule.prototype._resetState = function() {
        this._isOngoingPlayback = false;
        this._isVideoPlaying = false;
        this._stopIntervalSendForProgress();
    };
    PlaybackBIModule.prototype._bindCallbacks = function() {
        this._sendProgress = this._sendProgress.bind(this);
    };
    PlaybackBIModule.prototype._bindEvents = function() {
        this._unbindEvents = this._eventEmitter.bindEvents([
            [playable_1.VIDEO_EVENTS.PLAY_REQUEST, this._sendPlayRequest],
            [playable_1.VIDEO_EVENTS.PLAY_ABORTED, this._sendPlayAborted],
            [playable_1.VIDEO_EVENTS.STATE_CHANGED, this._processStateChange],
        ], this);
    };
    PlaybackBIModule.prototype._processStateChange = function(_a) {
        var nextState = _a.nextState;
        if (!this._isAllMandatoryDataSet) {
            return;
        }
        switch (nextState) {
            case playable_1.ENGINE_STATES.SRC_SET:
                this._resetState();
                break;
            case playable_1.ENGINE_STATES.PLAYING:
                if (this._isOngoingPlayback) {
                    this._sendResumed();
                } else {
                    this._sendPlaying();
                }
                break;
            case playable_1.ENGINE_STATES.PAUSED:
                this._sendPause();
                break;
            case playable_1.ENGINE_STATES.ENDED:
                this._sendFinish();
                break;
            default:
                break;
        }
    };
    PlaybackBIModule.prototype._startIntervalSendForProgress = function() {
        if (this._intervalID) {
            return;
        }
        this._intervalID = window.setInterval(this._sendProgress, this._intervalDelta);
    };
    PlaybackBIModule.prototype._stopIntervalSendForProgress = function() {
        window.clearInterval(this._intervalID);
        this._intervalID = null;
    };
    PlaybackBIModule.prototype._sendPlayRequest = function() {
        if (!this._isAllMandatoryDataSet || this._isOngoingPlayback) {
            return;
        }
        var _a = this._engine.getDebugInfo(),
            _b = _a.bitrates,
            bitrates = _b === void 0 ? [] : _b,
            _c = _a.type,
            type = _c === void 0 ? UNKNOW_TYLE : _c;
        this._generateNewViewID();
        this._logger.playablePlayRequested({
            customDataJson: this._customData,
            correlationId: this._collerationID,
            product: this._product,
            videoId: this._videoID,
            videoDuration: convertMSToInt(this._engine.getDuration()),
            videoType: type,
            bitrateJson: JSON.stringify(bitrates),
        });
    };
    PlaybackBIModule.prototype._sendPlayAborted = function(event) {
        if (!this._isAllMandatoryDataSet) {
            return;
        }
        this._logger.playablePlayAborted({
            correlationId: this._collerationID,
            videoId: this._videoID,
            reasonMessage: event.message,
        });
        this._generateNewViewID();
    };
    PlaybackBIModule.prototype._sendPlaying = function() {
        if (!this._isVideoPlaying) {
            this._logger.playablePlayStarted({
                correlationId: this._collerationID,
                videoId: this._videoID,
            });
            this._isOngoingPlayback = true;
            this._isVideoPlaying = true;
            this._startIntervalSendForProgress();
        }
    };
    PlaybackBIModule.prototype._getCurrentTimeOfVideo = function() {
        return convertMSToInt(this._engine.getCurrentTime());
    };
    PlaybackBIModule.prototype._sendResumed = function() {
        if (!this._isVideoPlaying) {
            this._logger.playablePlayResumed({
                correlationId: this._collerationID,
                videoId: this._videoID,
                currentTimeFrame: this._getCurrentTimeOfVideo(),
            });
            this._isVideoPlaying = true;
            this._startIntervalSendForProgress();
        }
    };
    PlaybackBIModule.prototype._sendProgress = function() {
        var _a = this._engine.getDebugInfo(),
            type = _a.type,
            currentBitrate = _a.currentBitrate;
        this._logger.playableProgressInfo({
            correlationId: this._collerationID,
            currentBitrate: currentBitrate,
            currentTimeFrame: this._getCurrentTimeOfVideo(),
            deliveryType: type,
            playedRange: JSON.stringify(this.getPlayedRange()),
            videoId: this._videoID,
        });
    };
    PlaybackBIModule.prototype._sendPause = function() {
        if (this._isVideoPlaying) {
            this._logger.playablePlayPaused({
                correlationId: this._collerationID,
                currentTimeFrame: this._getCurrentTimeOfVideo(),
                playedRange: JSON.stringify(this.getPlayedRange()),
                videoId: this._videoID,
            });
            this._stopIntervalSendForProgress();
            this._isVideoPlaying = false;
        }
    };
    PlaybackBIModule.prototype._sendFinish = function() {
        this._logger.playablePlayFinished({
            correlationId: this._collerationID,
            playedRange: JSON.stringify(this.getPlayedRange()),
            videoId: this._videoID,
        });
        this._stopIntervalSendForProgress();
        this._isOngoingPlayback = false;
        this._isVideoPlaying = false;
    };
    PlaybackBIModule.prototype.destroy = function() {
        this._stopIntervalSendForProgress();
        this._unbindEvents();
        this._eventEmitter = null;
        this._engine = null;
        this._videoTag = null;
        this._logger = null;
    };
    PlaybackBIModule.moduleName = 'wix-playback-bi-module';
    PlaybackBIModule.dependencies = ['eventEmitter', 'engine'];
    __decorate([
        playable_1.playerAPIDecorator()
    ], PlaybackBIModule.prototype, "setWixBIVideoID", null);
    __decorate([
        playable_1.playerAPIDecorator()
    ], PlaybackBIModule.prototype, "setWixBIProduct", null);
    __decorate([
        playable_1.playerAPIDecorator()
    ], PlaybackBIModule.prototype, "setWixBICustomDataJSON", null);
    __decorate([
        playable_1.playerAPIDecorator()
    ], PlaybackBIModule.prototype, "setWixBIProgressInterval", null);
    __decorate([
        playable_1.playerAPIDecorator()
    ], PlaybackBIModule.prototype, "setWixVisitorID", null);
    __decorate([
        playable_1.playerAPIDecorator()
    ], PlaybackBIModule.prototype, "setWixMSID", null);
    return PlaybackBIModule;
}());
exports.PlaybackBIModule = PlaybackBIModule;
//# sourceMappingURL=playback-bi-module.js.map