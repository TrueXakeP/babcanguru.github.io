'use strict';

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var domUtils = require('../../utils/domUtils');

function wixBgMediaWrapper(WixElement, windowResizeService, services) {
    var WixBgMedia = function(_WixElement) {
        _inherits(WixBgMedia, _WixElement);

        function WixBgMedia() {
            _classCallCheck(this, WixBgMedia);

            // eslint-disable-line no-useless-constructor
            return _possibleConstructorReturn(this, _WixElement.call(this));
        }

        WixBgMedia.prototype.reLayout = function reLayout() {
            var _this2 = this;

            var _dataset = this.dataset,
                containerId = _dataset.containerId,
                pageId = _dataset.pageId;

            var container = document.querySelector('#' + containerId);
            var page = document.querySelector('#' + pageId);
            var measures = {};

            services.mutationService.measure(function() {
                var screenHeight = document.documentElement.clientHeight;
                var containerRect = container.getBoundingClientRect();
                var pageRect = page.getBoundingClientRect();
                Object.assign(measures, {
                    width: containerRect.width + 'px',
                    height: Math.max(containerRect.height, screenHeight) + 'px',
                    left: containerRect.left - pageRect.left + 'px'
                });
            });

            services.mutationService.mutate(function() {
                domUtils.setStyle(_this2, measures);
            });
        };

        WixBgMedia.prototype.connectedCallback = function connectedCallback() {
            _WixElement.prototype.connectedCallback.call(this);

            windowResizeService.observe(this);
        };

        WixBgMedia.prototype.disconnectedCallback = function disconnectedCallback() {
            _WixElement.prototype.disconnectedCallback.call(this);

            windowResizeService.unobserve(this);
        };

        return WixBgMedia;
    }(WixElement);

    return WixBgMedia;
}

module.exports = wixBgMediaWrapper;
//# sourceMappingURL=wixBgMedia.js.map