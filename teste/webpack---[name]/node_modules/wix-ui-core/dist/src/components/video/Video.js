"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var tslib_1 = require("tslib");
var React = require("react");
var players_1 = require("./players");
var Video_st_css_1 = require("./Video.st.css");
var noop = function() {
    return null;
};
var DEFAULT_PLAYER = 'playable';
var getPlayerName = function(url) {
    for (var key in players_1.playerVerifiers) {
        var name_1 = key;
        if (players_1.playerVerifiers[name_1](url)) {
            return name_1;
        }
    }
    return DEFAULT_PLAYER;
};
var Video = /** @class */ (function(_super) {
    tslib_1.__extends(Video, _super);

    function Video(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            playerName: null,
        };
        _this.state.playerName = getPlayerName(_this.props.src);
        return _this;
    }
    Video.prototype.UNSAFE_componentWillReceiveProps = function(nextProps) {
        if (this.props.src !== nextProps.src) {
            this.setState({
                playerName: getPlayerName(nextProps.src),
            });
        }
    };
    Video.prototype.render = function() {
        var playerName = this.state.playerName;
        if (!playerName) {
            return null;
        }
        var Player = players_1.playerComponents[playerName];
        var playerProps = tslib_1.__assign({}, this.props, this.props.config[playerName]);
        var _a = this.props,
            id = _a.id,
            fillAllSpace = _a.fillAllSpace,
            playerRef = _a.playerRef;
        var _b = this.props,
            width = _b.width,
            height = _b.height;
        if (fillAllSpace) {
            width = '100%';
            height = '100%';
        }
        return (React.createElement("div", tslib_1.__assign({
                id: id,
                style: {
                    width: width,
                    height: height
                }
            }, Video_st_css_1.default('root', {}, this.props)),
            React.createElement(Player, tslib_1.__assign({}, playerProps, {
                ref: playerRef
            }))));
    };
    Video.displayName = 'Video';
    Video.defaultProps = {
        controls: true,
        loop: false,
        muted: false,
        showTitle: true,
        fillAllSpace: false,
        volume: 100,
        onInit: noop,
        onReady: noop,
        onDuration: noop,
        onPlay: noop,
        onPause: noop,
        onEnded: noop,
        onProgress: noop,
        onError: noop,
        onFirstPlay: noop,
        onFirstEnded: noop,
        config: {},
    };
    return Video;
}(React.Component));
exports.Video = Video;
//# sourceMappingURL=Video.js.map