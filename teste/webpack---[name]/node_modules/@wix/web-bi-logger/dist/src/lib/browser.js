'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function() {
    function sliceIterator(arr, i) {
        var _arr = [];
        var _n = true;
        var _d = false;
        var _e = undefined;
        try {
            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                _arr.push(_s.value);
                if (i && _arr.length === i) break;
            }
        } catch (err) {
            _d = true;
            _e = err;
        } finally {
            try {
                if (!_n && _i["return"]) _i["return"]();
            } finally {
                if (_d) throw _e;
            }
        }
        return _arr;
    }
    return function(arr, i) {
        if (Array.isArray(arr)) {
            return arr;
        } else if (Symbol.iterator in Object(arr)) {
            return sliceIterator(arr, i);
        } else {
            throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }
    };
}();

exports.now = now;
exports.getDesktopSize = getDesktopSize;
exports.getWindowSize = getWindowSize;
exports.sendBeacon = sendBeacon;
exports.readCookie = readCookie;

function now() {
    return typeof performance !== 'undefined' && performance && performance.now ? performance.now() : -1;
}

function getDesktopSize(window) {
    var width = window.screen && window.screen.width || 0;
    var height = window.screen && window.screen.height || 0;

    return width + 'x' + height;
}

function getWindowSize(window) {
    var width = 0;
    var height = 0;

    if (window.innerWidth) {
        width = window.innerWidth;
        height = window.innerHeight;
    } else if (window.document) {
        if (window.document.documentElement && window.document.documentElement.clientWidth) {
            width = window.document.documentElement.clientWidth;
            height = window.document.documentElement.clientHeight;
        } else if (window.document.body && window.document.body.clientWidth) {
            width = window.document.body.clientWidth;
            height = window.document.body.clientHeight;
        }
    }

    return width + 'x' + height;
}

function sendBeacon(url) {
    if (typeof navigator === 'undefined' || !navigator || !navigator.sendBeacon) {
        return false;
    }

    return navigator.sendBeacon(url);
}

function readCookie(cookieName) {
    if (typeof document === 'undefined') {
        return null;
    }

    var cookies = document.cookie.split(';');

    for (var i = 0; i < cookies.length; i++) {
        var _cookies$i$split = cookies[i].split('='),
            _cookies$i$split2 = _slicedToArray(_cookies$i$split, 2),
            name = _cookies$i$split2[0],
            value = _cookies$i$split2[1];

        while (name[0] === ' ') {
            name = name.substr(1);
        }

        if (name === cookieName) {
            return value;
        }
    }

    return '';
}