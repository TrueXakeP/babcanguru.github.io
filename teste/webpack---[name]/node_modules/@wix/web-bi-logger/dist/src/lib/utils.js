'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getCookieParams = getCookieParams;
exports.buildUrl = buildUrl;
exports.guid = guid;

var _browser = require('./browser');

var _env = require('./env');

var cacheKillerCounter = 0;

function addParam(url, key, value) {
    var separator = url.indexOf('?') === -1 ? '?' : '&';
    return '' + url + separator + encodeURIComponent(key) + '=' + encodeURIComponent(value);
}

function getCookieParams(params) {
    return Object.keys(params).reduce(function(res, param) {
        var _params$param = params[param],
            name = _params$param.name,
            _params$param$transfo = _params$param.transform,
            transform = _params$param$transfo === undefined ? function(x) {
                return x;
            } : _params$param$transfo;

        var value = transform((0, _browser.readCookie)(name));

        if (value) {
            res[param] = value;
        }

        return res;
    }, {});
}

function buildUrl(_ref, params) {
    var host = _ref.host,
        _ref$endpoint = _ref.endpoint,
        endpoint = _ref$endpoint === undefined ? '' : _ref$endpoint;
    var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    host = host || (0, _env.getHost)();
    endpoint = context.endpoint || endpoint;

    params._ = '' + new Date().getTime() + cacheKillerCounter++;
    params.ms = Math.round((0, _browser.now)());

    var prefix = '//' + host + '/' + endpoint;
    return Object.keys(params).reduce(function(url, key) {
        return addParam(url, key, params[key]);
    }, prefix);
}

function guid() {
    /*eslint-disable */
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
        var r = Math.random() * 16 | 0;
        var v = c === 'x' ? r : r & 0x3 | 0x8;
        return v.toString(16);
    });
    /*eslint-enable */
}