'use strict';

exports.__esModule = true;
exports.phasesConfig = undefined;
exports.create = create;
exports.setFactory = setFactory;
exports.reportAppLoadStarted = reportAppLoadStarted;

var _env = require('./env');

var _conf = require('./conf');

var _reporter = require('./reporter/reporter');

var _reporter2 = _interopRequireDefault(_reporter);

var _baseLogger = require('./base-logger');

var _baseLogger2 = _interopRequireDefault(_baseLogger);

var _appData = require('./app-data/app-data');

var _sessionManager = require('./session-manager/session-manager');

var _sessionManager2 = _interopRequireDefault(_sessionManager);

var _performance = require('./performance/performance');

var _performance2 = _interopRequireDefault(_performance);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}

var ReporterFactory = void 0;

function getAppVersion() {
    return (0, _env.env)().__CI_APP_VERSION__ || _conf.DEFAULT_APP_VERSION;
}

/*
 * @param baseUrl
 * @param appId
 * @param disableAutoLoadFinish
 * @param interactionTimeout
 * @param timeoutHook
 * @param startHook
 * @param endHook
 * @param biLoggerFactory
 * @param endpoint
 */
function create(appName) {
    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    if (!appName) {
        return null;
    }

    (0, _appData.initializeGlobal)(appName);
    var reporter = createReporterInstance(params);
    return new _baseLogger2.default(appName, getAppVersion(), reporter, params);
}

function setFactory(factory) {
    ReporterFactory = factory;
}

function createReporterInstance(_ref) {
    var biLoggerFactory = _ref.biLoggerFactory,
        baseUrl = _ref.baseUrl,
        endpoint = _ref.endpoint;

    if (!ReporterFactory) {
        return new _reporter2.default({
            biLoggerFactory: biLoggerFactory,
            baseUrl: baseUrl,
            endpoint: endpoint
        });
    } else {
        return ReporterFactory({
            biLoggerFactory: biLoggerFactory,
            baseUrl: baseUrl
        });
    }
}

function reportAppLoadStarted(appName) {
    (0, _appData.initializeGlobal)(appName);
    (0, _appData.setStartLoadTime)(appName, _performance2.default.responseEndTime() || _performance2.default.now());
    var sessionId = _sessionManager2.default.getSessionId();
    (0, _appData.setSessionId)(sessionId);
    var url = '//frog.wix.com/fed?appName=' + appName + '&src=72&evid=14&session_id=' + sessionId + '&_=' + Math.random();
    if ((0, _env.hasSendBeacon)()) {
        (0, _env.sendBeacon)(url);
    } else {
        new Image().src = url;
    }
}

var phasesConfig = exports.phasesConfig = _baseLogger.phasesConfigValues;