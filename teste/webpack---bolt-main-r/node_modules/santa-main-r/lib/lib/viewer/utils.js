'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
/**
 * @param pages
 * @param pageId
 * @returns {Page}
 */
function getPageById(pages, pageId) {
    return pages.find(function(p) {
        return p.pageId === pageId;
    });
}

/**
 * @typedef {Object} Page
 * @property {string} pageId
 * @property {string} pageUriSEO
 */

/**
 * @param window
 * @param {{pages: Page[], mainPageId: string}} pageList
 * @param {boolean} isPremium
 * @returns {Page|null}
 */
function getPageInfo(window, pageList, isPremium) {
    if (!pageList) {
        return null;
    }
    var pages = pageList.pages || [];
    var hash = window.location.hash.split('/');
    var pageId = hash[1];
    if (pageId) {
        var page = getPageById(pages, pageId);
        if (page) {
            return page;
        }
    }

    var pathname = window.location.pathname;
    if (pathname) {
        if (!isPremium) {
            var match = pathname.match(/\/.+\/([^/]+)$/);
            pathname = match && match[1];
        }

        if (pathname) {
            var result = pages.find(function(p) {
                var pageUriSEO = p.pageUriSEO;
                if (pageUriSEO) {
                    var re = new RegExp('(^|/)' + pageUriSEO + '(/|$)');
                    return re.test(pathname);
                }
                return false;
            });

            if (result) {
                return result;
            }
        }
    }

    return pageList.mainPageId && getPageById(pages, pageList.mainPageId);
}

exports.getPageInfo = getPageInfo;
//# sourceMappingURL=utils.js.map