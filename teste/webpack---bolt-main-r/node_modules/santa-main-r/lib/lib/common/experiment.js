'use strict';

var transformedExperimentsCache = new WeakMap();

function getRunningExperiments(context) {
    var model = context && (context.rendererModel || context.editorModel) || {}; //eslint-disable-line no-extra-parens
    var _model$runningExperim = model.runningExperiments,
        runningExperiments = _model$runningExperim === undefined ? {} : _model$runningExperim;

    return runningExperiments;
}

function transformRunningExperiments(runningExperiments) {
    return Object.keys(runningExperiments).reduce(function(acc, key) {
        acc[key.toLowerCase()] = runningExperiments[key];
        return acc;
    }, Object.create(null));
}

function getValue(name, context) {
    var runningExperiments = getRunningExperiments(context);
    var value = runningExperiments[name];
    if (value !== undefined) {
        return value;
    }

    var transformedExperiments = transformedExperimentsCache.get(runningExperiments);
    if (!transformedExperiments) {
        transformedExperiments = transformRunningExperiments(runningExperiments);
        transformedExperimentsCache.set(runningExperiments, transformedExperiments);
    }
    return transformedExperiments[name.toLowerCase()];
}

function isMultiValueExperimentOpen(name, context) {
    var value = getValue(name, context);
    return !!(value && value !== 'old' && value !== 'false');
}

module.exports = {
    getRunningExperiments: getRunningExperiments,
    isMultiValueExperimentOpen: isMultiValueExperimentOpen,
    isOpen: isMultiValueExperimentOpen,
    getValue: getValue
};
//# sourceMappingURL=experiment.js.map