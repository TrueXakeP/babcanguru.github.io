'use strict';

var _createClass = function() {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var videoLayout = require('./videoLayout');

function wixVideoWrapper(WixElement, services, environmentConsts) {
    var wixVideo = function(_WixElement) {
        _inherits(wixVideo, _WixElement);

        function wixVideo() {
            _classCallCheck(this, wixVideo);

            // eslint-disable-line no-useless-constructor
            return _possibleConstructorReturn(this, _WixElement.call(this));
        }

        wixVideo.prototype.reLayout = function reLayout() {
            var _this2 = this;

            var videoSourceUrl = void 0;
            var needsSrcUpdate = void 0;
            var videoStyle = void 0;

            var _JSON$parse = JSON.parse(this.dataset.videoInfo),
                isVideoDataExists = _JSON$parse.isVideoDataExists,
                videoWidth = _JSON$parse.videoWidth,
                videoHeight = _JSON$parse.videoHeight,
                qualities = _JSON$parse.qualities,
                staticVideoUrl = _JSON$parse.staticVideoUrl,
                videoId = _JSON$parse.videoId,
                videoFormat = _JSON$parse.videoFormat,
                alignType = _JSON$parse.alignType,
                fittingType = _JSON$parse.fittingType,
                hasBgScrollEffect = _JSON$parse.hasBgScrollEffect,
                autoPlay = _JSON$parse.autoPlay,
                animatePoster = _JSON$parse.animatePoster,
                containerId = _JSON$parse.containerId,
                isEditorMode = _JSON$parse.isEditorMode;

            var autoPlayAllowed = !environmentConsts.prefersReducedMotion && autoPlay;
            var container = document.querySelector('#' + containerId);
            var videoNode = void 0;
            var poster = void 0;
            var canvas = void 0;

            services.mutationService.measure(function() {
                if (isVideoDataExists) {
                    videoNode = _this2.querySelector('video[id^="' + containerId + '"]');
                    poster = container.querySelector('.bgVideoposter[id^="' + containerId + '"]');
                    canvas = container.querySelector('.webglcanvas[id^="' + containerId + '"]');

                    var measures = videoLayout.measure(videoNode, container, hasBgScrollEffect, videoWidth, videoHeight, fittingType, alignType, qualities, staticVideoUrl, videoId, videoFormat);

                    videoSourceUrl = measures.videoSourceUrl;
                    needsSrcUpdate = measures.needsSrcUpdate;
                    videoStyle = measures.videoStyle;
                }
            });

            services.mutationService.mutate(function() {
                if (isVideoDataExists) {
                    videoLayout.mutate(poster, canvas, videoNode, videoStyle, autoPlayAllowed, videoSourceUrl, needsSrcUpdate, animatePoster, videoFormat, isEditorMode);
                }
            });
        };

        wixVideo.prototype.attributeChangedCallback = function attributeChangedCallback(name, oldValue) {
            if (oldValue) {
                this.reLayout();
            }
        };

        _createClass(wixVideo, null, [{
            key: 'observedAttributes',
            get: function get() {
                return ['data-video-info'];
            }
        }]);

        return wixVideo;
    }(WixElement);

    return wixVideo;
}

module.exports = wixVideoWrapper;
//# sourceMappingURL=wixVideo.js.map